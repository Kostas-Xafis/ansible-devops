---
- hosts: app_servers

  pre_tasks:
    - name: Install Nginx
      package:
        name: nginx
        state: latest
      become: true

    - name: Install nvm
      shell: |
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
      args:
        executable: /bin/bash
        chdir: "$HOME"
        creates: "$HOME/.nvm/nvm.sh"

    - name: Setup .profile
      lineinfile:
        path: ~/.profile
        line: source ~/.nvm/nvm.sh # This will make sure Node is on the user's PATH
        create: true

    - name: Install node
      shell: |
        source $HOME/.nvm/nvm.sh && nvm install 20.12.1
      args:
        executable: /bin/bash
        chdir: "$HOME"
        creates: "$HOME/.nvm/versions/node/v20.12.1"
  
    - name: Install Git
      package:
        name: git
        state: latest
      become: true

  tasks:
    - name: "Clone the website repository"
      git:
          repo: "https://github.com/Kostas-Xafis/DtstProjectFrontend.git"
          dest: "{{ frontend_app_dir }}"
          version: "{{ branch }}"
          force: true

    - name: "Install dependencies & Build the website"
      shell: "export PATH=$PATH:~/.nvm/versions/node/v20.12.1/bin ; npm install ; npm run build"
      args:
        chdir: "{{ frontend_app_dir }}"

    - name: "Copy dist in nginx location" 
      copy:
        src: "{{ frontend_app_dir }}/dist/"
        dest: "{{ site_location }}"
        remote_src: True
        mode: 7777
        force: true
      notify: restart nginx
      become: true

    - name: "Copy nginx conf file"
      template:
        src: ../files/nginx.frontend.j2
        dest: "/etc/nginx/sites-available/website"
      notify: restart nginx
      become: true

    - name: "Enable website in nginx"
      file:
        src: "/etc/nginx/sites-available/website"
        dest: "/etc/nginx/sites-enabled/website"
        state: link
      notify: restart nginx
      become: true
    
    - name: "De-activate default nginx site"
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent
      become: true
      notify: restart nginx

  handlers:
    - name: restart nginx
      service:
        name: nginx
        state: restarted
      become: true
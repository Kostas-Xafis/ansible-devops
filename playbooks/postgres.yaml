---
- hosts: postgres
  become: true
  become_user: root

  pre_tasks:
    - name: Check if PostgreSQL essentials are installed
      shell: "psql --version && python3 --version && pip3 --version && pip3 show psycopg2-binary"
      register: postgres_essentials
      ignore_errors: true

    - name: Set PostgreSQL installed fact
      set_fact:
        postgres_installed: "{{ postgres_essentials.rc == 0 }}"

    - name: Install the PostgreSQL essentials if not installed
      include_tasks: essentials/postgres.yaml
      when: not postgres_installed
    
    - name: Force update
      include_tasks: essentials/postgres.yaml
      when: "postgres_installed and {{ force_update }} == true"
  tasks:

    - name: Check if postgres is initialized
      ansible.builtin.stat:
        path: /var/lib/postgresql/14/main
      register: postgres_data

    - name: Initialize PostgreSQL
      shell: "postgresql-setup initdb"
      when: not postgres_data.stat.exists

    - name: Start and enable services
      service: "name={{ item }} state=started enabled=true"
      with_items:
        - postgresql

    - name: Create app database
      postgresql_db:
        state: present
        name: "{{ db.name }}"
      become: true
      become_user: postgres

    - name: Create db user
      postgresql_user:
          state: present
          name: "{{ db.user }}"
          password: "{{ db.password }}"
          role_attr_flags: "SUPERUSER,CREATEDB"
      become: true
      become_user: postgres

    - name: Grant db user access to app db
      postgresql_privs:
        type: database
        database: "{{ db.name }}"
        roles: "{{ db.user }}"
        grant_option: no
        privs: all
      become: true
      become_user: postgres

    - name: Allow password connection for the db user
      postgresql_pg_hba:
        dest: "/etc/postgresql/14/main/pg_hba.conf"
        contype: host
        databases: all
        source: 0.0.0.0/0
        method: password
        users: "{{ db.user }}"
        create: true
      become: true
      become_user: postgres
      notify: restart postgres

    - name: Allow connections from all
      lineinfile:
        path: "/etc/postgresql/14/main/postgresql.conf"
        line: "listen_addresses = '*'"
        regexp: "^#listen_addresses = 'localhost'"
        state: present
      become: true
      become_user: postgres
      notify: restart postgres

  handlers:
    - name: restart postgres
      service: name=postgresql state=restarted